//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserInterface.ServiceUColaborateur {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceUColaborateur.IUColaborateur")]
    public interface IUColaborateur {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/ajouterColab", ReplyAction="http://tempuri.org/IUColaborateur/ajouterColabResponse")]
        void ajouterColab(Entities.Colaborateur colaborateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/ajouterColab", ReplyAction="http://tempuri.org/IUColaborateur/ajouterColabResponse")]
        System.Threading.Tasks.Task ajouterColabAsync(Entities.Colaborateur colaborateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/afficherColab", ReplyAction="http://tempuri.org/IUColaborateur/afficherColabResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Entities.Colaborateur))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Entities.DemandeVisa[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Entities.DemandeVisa))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Entities.Deplacement[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Entities.Deplacement))]
        object afficherColab(string sortOrder, string searchString, string currentFilter, System.Nullable<int> page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/afficherColab", ReplyAction="http://tempuri.org/IUColaborateur/afficherColabResponse")]
        System.Threading.Tasks.Task<object> afficherColabAsync(string sortOrder, string searchString, string currentFilter, System.Nullable<int> page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/supprimerColaborateurConfirmer", ReplyAction="http://tempuri.org/IUColaborateur/supprimerColaborateurConfirmerResponse")]
        bool supprimerColaborateurConfirmer(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/supprimerColaborateurConfirmer", ReplyAction="http://tempuri.org/IUColaborateur/supprimerColaborateurConfirmerResponse")]
        System.Threading.Tasks.Task<bool> supprimerColaborateurConfirmerAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/supprimerColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/supprimerColaborateurResponse")]
        Entities.Colaborateur supprimerColaborateur(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/supprimerColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/supprimerColaborateurResponse")]
        System.Threading.Tasks.Task<Entities.Colaborateur> supprimerColaborateurAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/detaillerColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/detaillerColaborateurResponse")]
        Entities.Colaborateur detaillerColaborateur(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/detaillerColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/detaillerColaborateurResponse")]
        System.Threading.Tasks.Task<Entities.Colaborateur> detaillerColaborateurAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/modifierColborateur", ReplyAction="http://tempuri.org/IUColaborateur/modifierColborateurResponse")]
        Entities.Colaborateur modifierColborateur(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/modifierColborateur", ReplyAction="http://tempuri.org/IUColaborateur/modifierColborateurResponse")]
        System.Threading.Tasks.Task<Entities.Colaborateur> modifierColborateurAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/modifierColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/modifierColaborateurResponse")]
        void modifierColaborateur(Entities.Colaborateur colaborateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/modifierColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/modifierColaborateurResponse")]
        System.Threading.Tasks.Task modifierColaborateurAsync(Entities.Colaborateur colaborateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/FileExtension", ReplyAction="http://tempuri.org/IUColaborateur/FileExtensionResponse")]
        string FileExtension(string exportType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/FileExtension", ReplyAction="http://tempuri.org/IUColaborateur/FileExtensionResponse")]
        System.Threading.Tasks.Task<string> FileExtensionAsync(string exportType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/ExporterColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/ExporterColaborateurResponse")]
        byte[] ExporterColaborateur(string exportType, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUColaborateur/ExporterColaborateur", ReplyAction="http://tempuri.org/IUColaborateur/ExporterColaborateurResponse")]
        System.Threading.Tasks.Task<byte[]> ExporterColaborateurAsync(string exportType, string path);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUColaborateurChannel : UserInterface.ServiceUColaborateur.IUColaborateur, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UColaborateurClient : System.ServiceModel.ClientBase<UserInterface.ServiceUColaborateur.IUColaborateur>, UserInterface.ServiceUColaborateur.IUColaborateur {
        
        public UColaborateurClient() {
        }
        
        public UColaborateurClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UColaborateurClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UColaborateurClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UColaborateurClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ajouterColab(Entities.Colaborateur colaborateur) {
            base.Channel.ajouterColab(colaborateur);
        }
        
        public System.Threading.Tasks.Task ajouterColabAsync(Entities.Colaborateur colaborateur) {
            return base.Channel.ajouterColabAsync(colaborateur);
        }
        
        public object afficherColab(string sortOrder, string searchString, string currentFilter, System.Nullable<int> page, int pageSize) {
            return base.Channel.afficherColab(sortOrder, searchString, currentFilter, page, pageSize);
        }
        
        public System.Threading.Tasks.Task<object> afficherColabAsync(string sortOrder, string searchString, string currentFilter, System.Nullable<int> page, int pageSize) {
            return base.Channel.afficherColabAsync(sortOrder, searchString, currentFilter, page, pageSize);
        }
        
        public bool supprimerColaborateurConfirmer(System.Nullable<int> id) {
            return base.Channel.supprimerColaborateurConfirmer(id);
        }
        
        public System.Threading.Tasks.Task<bool> supprimerColaborateurConfirmerAsync(System.Nullable<int> id) {
            return base.Channel.supprimerColaborateurConfirmerAsync(id);
        }
        
        public Entities.Colaborateur supprimerColaborateur(System.Nullable<int> id) {
            return base.Channel.supprimerColaborateur(id);
        }
        
        public System.Threading.Tasks.Task<Entities.Colaborateur> supprimerColaborateurAsync(System.Nullable<int> id) {
            return base.Channel.supprimerColaborateurAsync(id);
        }
        
        public Entities.Colaborateur detaillerColaborateur(System.Nullable<int> id) {
            return base.Channel.detaillerColaborateur(id);
        }
        
        public System.Threading.Tasks.Task<Entities.Colaborateur> detaillerColaborateurAsync(System.Nullable<int> id) {
            return base.Channel.detaillerColaborateurAsync(id);
        }
        
        public Entities.Colaborateur modifierColborateur(System.Nullable<int> id) {
            return base.Channel.modifierColborateur(id);
        }
        
        public System.Threading.Tasks.Task<Entities.Colaborateur> modifierColborateurAsync(System.Nullable<int> id) {
            return base.Channel.modifierColborateurAsync(id);
        }
        
        public void modifierColaborateur(Entities.Colaborateur colaborateur) {
            base.Channel.modifierColaborateur(colaborateur);
        }
        
        public System.Threading.Tasks.Task modifierColaborateurAsync(Entities.Colaborateur colaborateur) {
            return base.Channel.modifierColaborateurAsync(colaborateur);
        }
        
        public string FileExtension(string exportType) {
            return base.Channel.FileExtension(exportType);
        }
        
        public System.Threading.Tasks.Task<string> FileExtensionAsync(string exportType) {
            return base.Channel.FileExtensionAsync(exportType);
        }
        
        public byte[] ExporterColaborateur(string exportType, string path) {
            return base.Channel.ExporterColaborateur(exportType, path);
        }
        
        public System.Threading.Tasks.Task<byte[]> ExporterColaborateurAsync(string exportType, string path) {
            return base.Channel.ExporterColaborateurAsync(exportType, path);
        }
    }
}
