@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Entities.Colaborateur>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}


    <h3>Gestion des colaborateurs</h3>
    <div class="row">
@using (Html.BeginForm("Index", "UIColaborateur", FormMethod.Get))
{
        <div class="col-sm-3 pull-right">
            <div class="input-group">
                 @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })               
                 <span class="input-group-btn">
                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                </span>
            </div>
        </div>
}     
@using (Html.BeginForm("Index", "UIColaborateur", FormMethod.Get))
{
            <div class="col-sm-1 pull-right">
                @Html.DropDownList("pageSize", ViewBag.PageSize as List<SelectListItem>, new { @class = "form-control", onchange = "$(this.form).submit();" })
            </div>
}
    </div>
    <br />
    <div class="row">
        <div class="col-sm-1 pull-right">
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "UIColaborateur")'"><i class="glyphicon glyphicon-plus"></i></button>
        </div>
    </div>
    <div class="panel panel-default TableColab">
        <header>
            <div class="col-md-2">@Html.ActionLink("Export to PDF", "Export", new { ExportType = "PDF"})</div>
            <div class="col-md-2">@Html.ActionLink("Export to Excel", "Export", new { ExportType = "Excel"})</div>
            <div class="col-md-2">@Html.ActionLink("Export to Word", "Export", new { ExportType = "Word" })</div>

        </header>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr><th>#</th><th>@Html.ActionLink("Nom", "Index", new { sortOrder = ViewBag.NameSortParm , currentFilter = ViewBag.CurrentFilter })</th>
                    <th>@Html.ActionLink("Prenom", "Index", new { sortOrder = ViewBag.LastNameSortParm , currentFilter = ViewBag.CurrentFilter })</th>
                    <th>@Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.MailSortParm , currentFilter = ViewBag.CurrentFilter })</th>
                    <th>@Html.ActionLink("Equipe", "Index", new { sortOrder = ViewBag.TeamSortParm , currentFilter = ViewBag.CurrentFilter })</th>
                    <th>@Html.ActionLink("Poste", "Index", new { sortOrder = ViewBag.SortParm , currentFilter = ViewBag.CurrentFilter })</th>
                    <th>....</th></tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
            {
                        <tr>
                            <td>

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nom)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Prenom)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Equipe)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Poste)
                            </td>
                            <td>
                                <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Details", "UIColaborateur",new { id=item.Id })'"><i class="glyphicon glyphicon-eye-open"></i></button>
                                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "UIColaborateur",new { id=item.Id})'"><i class="glyphicon glyphicon-pencil"></i></button>
                                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "UIColaborateur",new { id=item.Id})'"><i class="glyphicon glyphicon-trash"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
<div class="pagerStyle">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize=ViewBag.psize , sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
  